import "https://raw.githubusercontent.com/Demigod122111/Neuku-Releases/refs/heads/main/Neuku%20v1.3.0/std.neuku" as std;
import "https://raw.githubusercontent.com/Demigod122111/Neuku-Releases/refs/heads/main/Neuku%20v1.3.0/raylib.neuku" as raylib;

// Initialization
//---------------------------------------------------------
var screenWidth = 800 ;
var screenHeight = 450 ;

raylib.SetConfigFlags(raylib.ConfigFlags("VSyncHint, Msaa4xHint, ResizableWindow")); 
raylib.InitWindow(screenWidth, screenHeight, "Following Eyes - RayLib");

raylib.SetTargetFPS( 60 );

var scleraLeftPosition;
var scleraRightPosition;
var scleraRadius = 65 ;

var irisLeftPosition;
var irisRightPosition;
var irisRadius = 24 ;

var angle = 0 ;
var dx = 0 ;
var dy = 0 ; 
var dxx = 0 ; 
var dyy = 0 ;
	
// Main Loop
//---------------------------------------------------------	
while (!raylib.WindowShouldClose())
{
	scleraLeftPosition = raylib.Vector2(raylib.GetScreenWidth() / 2 - 100 , raylib.GetScreenHeight() / 2 );
	scleraRightPosition = raylib.Vector2(raylib.GetScreenWidth() / 2 + 100 , raylib.GetScreenHeight() / 2 );

	irisLeftPosition = raylib.GetMousePosition();
    irisRightPosition = raylib.GetMousePosition();
	
	if (raylib.IsKeyDown(raylib.KeyboardKey("Down"))){
		scleraRadius--;
		scleraRadius = std.Math.Max( 35 , scleraRadius);
	}
	
	if (raylib.IsKeyDown(raylib.KeyboardKey("Up"))){
		scleraRadius++;
		scleraRadius = std.Math.Min( 95 , scleraRadius);
	}

    if (!raylib.CheckCollisionPointCircle(irisLeftPosition, scleraLeftPosition, scleraRadius - 20 ))
    {
        dx = irisLeftPosition.X - scleraLeftPosition.X;
        dy = irisLeftPosition.Y - scleraLeftPosition.Y;

        angle = std.Math.Atan2(dy, dx);

        dxx = (scleraRadius - irisRadius) * std.Math.Cos(angle);
        dyy = (scleraRadius - irisRadius) * std.Math.Sin(angle);

        irisLeftPosition.X = scleraLeftPosition.X + dxx;
        irisLeftPosition.Y = scleraLeftPosition.Y + dyy;
    }

    if (!raylib.CheckCollisionPointCircle(irisRightPosition, scleraRightPosition, scleraRadius - 20 ))
    {
        dx = irisRightPosition.X - scleraRightPosition.X;
        dy = irisRightPosition.Y - scleraRightPosition.Y;

        angle = std.Math.Atan2(dy, dx);

        dxx = (scleraRadius - irisRadius) * std.Math.Cos(angle);
        dyy = (scleraRadius - irisRadius) * std.Math.Sin(angle);

        irisRightPosition.X = scleraRightPosition.X + dxx;
        irisRightPosition.Y = scleraRightPosition.Y + dyy;
    }
	
	// Drawing
	//---------------------------------------------------------
    raylib.BeginDrawing();
    raylib.ClearBackground(raylib.ColorFromName("RayWhite"));

    raylib.DrawCircle(scleraLeftPosition, scleraRadius, raylib.ColorFromName("LightGray"));
    raylib.DrawCircle(irisLeftPosition, irisRadius, raylib.ColorFromName("Brown"));
    raylib.DrawCircle(irisLeftPosition, 10 , raylib.ColorFromName("Black"));

    raylib.DrawCircle(scleraRightPosition, scleraRadius, raylib.ColorFromName("LightGray"));
    raylib.DrawCircle(irisRightPosition, irisRadius, raylib.ColorFromName("DarkGreen"));
    raylib.DrawCircle(irisRightPosition, 10 , raylib.ColorFromName("Black"));

    raylib.DrawFPS( 10 , 10 );

    raylib.EndDrawing();
}


raylib.CloseWindow();